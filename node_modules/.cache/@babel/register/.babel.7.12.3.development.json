{
  "{\"sourceRoot\":\"/Users/pranjalichumbhale/Work/coding/blog/my-blog-backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/pranjalichumbhale/Work/coding/blog/my-blog-backend\",\"filename\":\"/Users/pranjalichumbhale/Work/coding/blog/my-blog-backend/src/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/pranjalichumbhale/Work/coding/blog/my-blog-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/pranjalichumbhale/Work/coding/blog/my-blog-backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/pranjalichumbhale/Work/coding/blog/my-blog-backend",
      "filename": "/Users/pranjalichumbhale/Work/coding/blog/my-blog-backend/src/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/pranjalichumbhale/Work/coding/blog/my-blog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/pranjalichumbhale/Work/coding/blog/my-blog-backend/src/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/pranjalichumbhale/Work/coding/blog/my-blog-backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/pranjalichumbhale/Work/coding/blog/my-blog-backend/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, '/build')));\napp.use(_bodyParser[\"default\"].json());\n\nvar withDB = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(operations, res) {\n    var client, db;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _mongodb[\"default\"].connect('mongodb://localhost:27017', {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n          case 3:\n            client = _context.sent;\n            db = client.db('my-blog');\n            _context.next = 7;\n            return operations(db);\n\n          case 7:\n            client.close();\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'Error connecting to db',\n              error: error\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function withDB(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\napp.get('/hello', function (req, res) {\n  return res.send(\"Hello !\");\n});\napp.get('/hello/:name', function (req, res) {\n  return res.send(\"Hello \".concat(req.params.name));\n});\napp.get('/api/articles/:name', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(db) {\n                var articleName, articlesInfo;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context2.next = 3;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articlesInfo = _context2.sent;\n                        res.status(200).json(articlesInfo);\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x5) {\n                return _ref3.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post('/api/articles/:name/upvote', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(db) {\n                var articleName, articlesInfo, updatedArticleInfo;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context4.next = 3;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articlesInfo = _context4.sent;\n                        _context4.next = 6;\n                        return db.collection('articles').updateOne({\n                          name: articleName\n                        }, {\n                          '$set': {\n                            \"upvotes\": articlesInfo.upvotes + 1\n                          }\n                        });\n\n                      case 6:\n                        _context4.next = 8;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 8:\n                        updatedArticleInfo = _context4.sent;\n                        res.status(200).json(updatedArticleInfo);\n\n                      case 10:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x8) {\n                return _ref5.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.post('/api/articles/:name/addcomment', function (req, res) {\n  withDB( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(db) {\n      var _req$body, username, text, articleName, articlesInfo, updatedArticleInfo;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _req$body = req.body, username = _req$body.username, text = _req$body.text;\n              articleName = req.params.name;\n              _context6.next = 4;\n              return db.collection('articles').findOne({\n                name: articleName\n              });\n\n            case 4:\n              articlesInfo = _context6.sent;\n              _context6.next = 7;\n              return db.collection('articles').updateOne({\n                name: articleName\n              }, {\n                '$set': {\n                  \"comments\": articlesInfo.comments.concat({\n                    username: username,\n                    text: text\n                  })\n                }\n              });\n\n            case 7:\n              _context6.next = 9;\n              return db.collection('articles').findOne({\n                name: articleName\n              });\n\n            case 9:\n              updatedArticleInfo = _context6.sent;\n              res.status(200).json(updatedArticleInfo);\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x9) {\n      return _ref6.apply(this, arguments);\n    };\n  }(), res);\n});\napp.post('/hello', function (req, res) {\n  return res.send(\"Hello \".concat(req.body.name, \"!\"));\n});\napp.get('*', function (req, res) {\n  res.sendFile(_path[\"default\"].join(__dirname + '/build/index.html'));\n});\napp.listen(8000, function () {\n  return console.log('Listeining on Port 8000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJleHByZXNzIiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJib2R5UGFyc2VyIiwianNvbiIsIndpdGhEQiIsIm9wZXJhdGlvbnMiLCJyZXMiLCJNb25nb0NsaWVudCIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJjbGllbnQiLCJkYiIsImNsb3NlIiwic3RhdHVzIiwibWVzc2FnZSIsImVycm9yIiwiZ2V0IiwicmVxIiwic2VuZCIsInBhcmFtcyIsIm5hbWUiLCJhcnRpY2xlTmFtZSIsImNvbGxlY3Rpb24iLCJmaW5kT25lIiwiYXJ0aWNsZXNJbmZvIiwicG9zdCIsInVwZGF0ZU9uZSIsInVwdm90ZXMiLCJ1cGRhdGVkQXJ0aWNsZUluZm8iLCJib2R5IiwidXNlcm5hbWUiLCJ0ZXh0IiwiY29tbWVudHMiLCJjb25jYXQiLCJzZW5kRmlsZSIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBR0EsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyw4QkFBZUMsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFvQixRQUFwQixDQUFmLENBQVI7QUFDQUwsR0FBRyxDQUFDQyxHQUFKLENBQVNLLHVCQUFXQyxJQUFYLEVBQVQ7O0FBQ0EsSUFBTUMsTUFBTTtBQUFBLHFFQUFJLGlCQUFPQyxVQUFQLEVBQW1CQyxHQUFuQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBRWFDLG9CQUFZQyxPQUFaLENBQW9CLDJCQUFwQixFQUFnRDtBQUFDQyxjQUFBQSxlQUFlLEVBQUUsSUFBbEI7QUFBd0JDLGNBQUFBLGtCQUFrQixFQUFFO0FBQTVDLGFBQWhELENBRmI7O0FBQUE7QUFFRkMsWUFBQUEsTUFGRTtBQUdGQyxZ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QixDQUFrQztBQUFDSCxnQkFBQUEsSUFBSSxFQUFDQztBQUFOLGVBQWxDLENBVDlCOztBQUFBO0FBU0dPLGNBQUFBLGtCQVRIO0FBVUh2QixjQUFBQSxHQUFHLENBQUNRLE1BQUosQ0FBVyxHQUFYLEVBQWdCWCxJQUFoQixDQUFxQjBCLGtCQUFyQjs7QUFWRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFEOztBQUFBO0FBQUE7QUFBQTtBQUFBLE9BV0h2QixHQVhHLENBQU47QUFZSCxDQWJEO0FBY0FWLEdBQUcsQ0FBQzhCLElBQUosQ0FBUyxRQUFULEVBQW1CLFVBQUNSLEdBQUQsRUFBTVosR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ2EsSUFBSixpQkFBa0JELEdBQUcsQ0FBQ1ksSUFBSixDQUFTVCxJQUEzQixPQUFkO0FBQUEsQ0FBbkI7QUFFQXpCLEdBQUcsQ0FBQ3FCLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFNWixHQUFOLEVBQWM7QUFDdkJBLEVBQUFBLEdBQUcsQ0FBQzZCLFFBQUosQ0FBYXBDLGlCQUFLQyxJQUFMLENBQVVDLFNBQVMsR0FBRyxtQkFBdEIsQ0FBYjtBQUNILENBRkQ7QUFHQUwsR0FBRyxDQUFDd0MsTUFBSixDQUFXLElBQVgsRUFBaUI7QUFBQSxTQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWixDQUFOO0FBQUEsQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3ByYW5qYWxpY2h1bWJoYWxlL1dvcmsvY29kaW5nL2Jsb2cvbXktYmxvZy1iYWNrZW5kL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBNb25nb0NsaWVudCBmcm9tICdtb25nb2RiJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwnL2J1aWxkJykpKTtcbmFwcC51c2UgKGJvZHlQYXJzZXIuanNvbigpKTtcbmNvbnN0IHdpdGhEQiAgPSBhc3luYyAob3BlcmF0aW9ucywgcmVzKSA9PiB7XG4gICAgdHJ5e1xuICAgICAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBNb25nb0NsaWVudC5jb25uZWN0KCdtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3Jyx7dXNlTmV3VXJsUGFyc2VyIDp0cnVlLCB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUgfSk7XG4gICAgICAgIGNvbnN0IGRiID0gY2xpZW50LmRiKCdteS1ibG9nJyk7XG4gICAgICAgIGF3YWl0IG9wZXJhdGlvbnMoZGIpO1xuICAgICAgICBjbGllbnQuY2xvc2UoKTtcbiAgICB9IGNhdGNoIHtcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe21lc3NhZ2U6J0Vycm9yIGNvbm5lY3RpbmcgdG8gZGInLCBlcnJvcn0pO1xuICAgIH1cbn1cblxuYXBwLmdldCgnL2hlbGxvJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZChcIkhlbGxvICFcIikpO1xuYXBwLmdldCgnL2hlbGxvLzpuYW1lJywgKHJlcSxyZXMpID0+IHJlcy5zZW5kKGBIZWxsbyAke3JlcS5wYXJhbXMubmFtZX1gKSlcbmFwcC5nZXQoJy9hcGkvYXJ0aWNsZXMvOm5hbWUnLCBhc3luYyAocmVxLHJlcykgPT4ge1xuICAgIHdpdGhEQihhc3luYyAoZGIpID0+IHtcbiAgICAgICAgY29uc3QgYXJ0aWNsZU5hbWUgPSByZXEucGFyYW1zLm5hbWU7XG4gICAgICAgIGNvbnN0IGFydGljbGVzSW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykuZmluZE9uZSh7bmFtZTphcnRpY2xlTmFtZX0pO1xuICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihhcnRpY2xlc0luZm8pO1xuICAgIH0sIHJlcykgXG59KVxuYXBwLnBvc3QoJy9hcGkvYXJ0aWNsZXMvOm5hbWUvdXB2b3RlJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgd2l0aERCKGFzeW5jIChkYikgPT4ge1xuICAgICAgICBjb25zdCBhcnRpY2xlTmFtZSA9IHJlcS5wYXJhbXMubmFtZTsgXG4gICAgICAgIGNvbnN0IGFydGljbGVzSW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykuZmluZE9uZSh7bmFtZTphcnRpY2xlTmFtZX0pO1xuICAgICAgICBhd2FpdCBkYi5jb2xsZWN0aW9uKCdhcnRpY2xlcycpLnVwZGF0ZU9uZSh7bmFtZTphcnRpY2xlTmFtZX0sIFxuICAgICAgICAgICAgeyckc2V0Jzoge1xuICAgICAgICAgICAgICAgIFwidXB2b3Rlc1wiOiBhcnRpY2xlc0luZm8udXB2b3RlcysxfVxuXG4gICAgICAgIH0pXG4gICAgICAgIGNvbnN0IHVwZGF0ZWRBcnRpY2xlSW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykuZmluZE9uZSh7bmFtZTphcnRpY2xlTmFtZX0pO1xuICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih1cGRhdGVkQXJ0aWNsZUluZm8pO1xuICAgIH0sIHJlcykgXG59KVxuXG5hcHAucG9zdCgnL2FwaS9hcnRpY2xlcy86bmFtZS9hZGRjb21tZW50JywgKHJlcSwgcmVzKSA9PiB7XG4gICAgd2l0aERCKGFzeW5jIChkYikgPT4ge1xuICAgICAgICBjb25zdCB7dXNlcm5hbWUsdGV4dH0gPSByZXEuYm9keTtcbiAgICAgICAgY29uc3QgYXJ0aWNsZU5hbWUgPSByZXEucGFyYW1zLm5hbWU7XG4gICAgICAgIGNvbnN0IGFydGljbGVzSW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykuZmluZE9uZSh7bmFtZTphcnRpY2xlTmFtZX0pO1xuICAgICAgICBhd2FpdCBkYi5jb2xsZWN0aW9uKCdhcnRpY2xlcycpLnVwZGF0ZU9uZSh7bmFtZTphcnRpY2xlTmFtZX0sIFxuICAgICAgICAgICAgeyckc2V0Jzoge1xuICAgICAgICAgICAgICAgIFwiY29tbWVudHNcIjogYXJ0aWNsZXNJbmZvLmNvbW1lbnRzLmNvbmNhdCh7dXNlcm5hbWUsdGV4dH0pfVxuXG4gICAgICAgIH0pXG4gICAgICAgIGNvbnN0IHVwZGF0ZWRBcnRpY2xlSW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykuZmluZE9uZSh7bmFtZTphcnRpY2xlTmFtZX0pO1xuICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih1cGRhdGVkQXJ0aWNsZUluZm8pO1xuICAgIH0sIHJlcykgXG59KVxuYXBwLnBvc3QoJy9oZWxsbycsIChyZXEsIHJlcykgPT4gcmVzLnNlbmQoYEhlbGxvICR7cmVxLmJvZHkubmFtZX0hYCkpO1xuXG5hcHAuZ2V0KCcqJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKHBhdGguam9pbihfX2Rpcm5hbWUgKyAnL2J1aWxkL2luZGV4Lmh0bWwnKSk7XG59KTtcbmFwcC5saXN0ZW4oODAwMCwgKCkgPT4gY29uc29sZS5sb2coJ0xpc3RlaW5pbmcgb24gUG9ydCA4MDAwJykpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "express",
        "path",
        "join",
        "__dirname",
        "bodyParser",
        "json",
        "withDB",
        "operations",
        "res",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "client",
        "db",
        "close",
        "status",
        "message",
        "error",
        "get",
        "req",
        "send",
        "params",
        "name",
        "articleName",
        "collection",
        "findOne",
        "articlesInfo",
        "post",
        "updateOne",
        "upvotes",
        "updatedArticleInfo",
        "body",
        "username",
        "text",
        "comments",
        "concat",
        "sendFile",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/pranjalichumbhale/Work/coding/blog/my-blog-backend/src/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport MongoClient from 'mongodb';\nimport path from 'path';\n\n\nconst app = express();\napp.use(express.static(path.join(__dirname,'/build')));\napp.use (bodyParser.json());\nconst withDB  = async (operations, res) => {\n    try{\n        const client = await MongoClient.connect('mongodb://localhost:27017',{useNewUrlParser :true, useUnifiedTopology: true });\n        const db = client.db('my-blog');\n        await operations(db);\n        client.close();\n    } catch {\n        res.status(500).json({message:'Error connecting to db', error});\n    }\n}\n\napp.get('/hello', (req, res) => res.send(\"Hello !\"));\napp.get('/hello/:name', (req,res) => res.send(`Hello ${req.params.name}`))\napp.get('/api/articles/:name', async (req,res) => {\n    withDB(async (db) => {\n        const articleName = req.params.name;\n        const articlesInfo = await db.collection('articles').findOne({name:articleName});\n        res.status(200).json(articlesInfo);\n    }, res) \n})\napp.post('/api/articles/:name/upvote', async (req, res) => {\n    withDB(async (db) => {\n        const articleName = req.params.name; \n        const articlesInfo = await db.collection('articles').findOne({name:articleName});\n        await db.collection('articles').updateOne({name:articleName}, \n            {'$set': {\n                \"upvotes\": articlesInfo.upvotes+1}\n\n        })\n        const updatedArticleInfo = await db.collection('articles').findOne({name:articleName});\n        res.status(200).json(updatedArticleInfo);\n    }, res) \n})\n\napp.post('/api/articles/:name/addcomment', (req, res) => {\n    withDB(async (db) => {\n        const {username,text} = req.body;\n        const articleName = req.params.name;\n        const articlesInfo = await db.collection('articles').findOne({name:articleName});\n        await db.collection('articles').updateOne({name:articleName}, \n            {'$set': {\n                \"comments\": articlesInfo.comments.concat({username,text})}\n\n        })\n        const updatedArticleInfo = await db.collection('articles').findOne({name:articleName});\n        res.status(200).json(updatedArticleInfo);\n    }, res) \n})\napp.post('/hello', (req, res) => res.send(`Hello ${req.body.name}!`));\n\napp.get('*', (req, res) => {\n    res.sendFile(path.join(__dirname + '/build/index.html'));\n});\napp.listen(8000, () => console.log('Listeining on Port 8000'));"
      ]
    },
    "sourceType": "script",
    "mtime": 1603347364012
  }
}